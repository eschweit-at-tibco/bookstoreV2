<project name="bookstore" default="build">
	<scriptdef name="generateguid" language="javascript" >
		<attribute name="name" />
		<![CDATA[	
			project.setProperty(attributes.get("name"), java.util.UUID.randomUUID());
		]]>
	</scriptdef>	
				
	<property name="IMAGE_NAME" value="bwce-bookstore" />
	<property name="HOST_PORT_NUMBER" value="9080" />
	<property name="PORT_NUMBER" value="8080" />
	<generateguid name="GUID" />
	<property name="CONTAINER_NAME" value="${GUID}" />

	<macrodef name="create-docker-image">
		<attribute name="image-name"/>
		<sequential>
			<exec executable="docker">
				<arg value="build" />
				<arg value="-t" />
				<arg value="@{image-name}" />
				<arg value="." />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="remove-docker-image">
		<attribute name="image-name"/>
		<sequential>
			<exec executable="docker">
				<arg value="rmi"/>
				<arg value="@{image-name}"/>
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="run-docker-image">
		<attribute name="image-name"/>
		<attribute name="container-name"/>
		<attribute name="host-port-number"/>
		<attribute name="image-port-number"/>
		<sequential>
	    	<exec executable="docker">
	        	<arg value="run" />
    	    	<arg value="--detach" />
        		<arg value="--name" />
        		<arg value="@{container-name}" />
        		<arg value="--publish" />
        		<arg value="@{host-port-number}:@{image-port-number}" />
        		<arg value="@{image-name}" />
    		</exec>
    	</sequential>
	</macrodef>

	<macrodef name="stop-docker-container">
		<attribute name="container-name"/>
		<sequential>
			<exec executable="docker">
				<arg value="stop" />
				<arg value="@{container-name}" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="remove-docker-container">
		<attribute name="container-name"/>
		<sequential>
			<exec executable="docker">
				<arg value="rm" />
				<arg value="--volumes" />
				<arg value="@{container-name}" />
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="push-docker-image">
		<attribute name="image-name"/>
		<sequential>
			<exec executable="docker">
				<arg value="push" />
				<arg value="@{image-name}" />
			</exec>
		</sequential>
	</macrodef>
	
	<target name="build">
		<copy file="../tibco.bwce.sample.binding.rest.BookStore.application/target/tibco.bwce.sample.binding.rest.BookStore.application_1.0.0.ear" todir="."/>
		<echo message="Creating Test Docker Image"/>		
		<create-docker-image image-name="${IMAGE_NAME}"/>
	</target>
	
	<target name="deploy-test-image">
		<run-docker-image image-name="${IMAGE_NAME}" container-name="${CONTAINER_NAME}" host-port-number="${HOST_PORT_NUMBER}" image-port-number="${PORT_NUMBER}"/>

		<echo message="Waiting for Docker Container to be started"/>
		<waitfor maxwait="90" maxwaitunit="second">
			<http url="http://localhost:${HOST_PORT_NUMBER}/books" />
		</waitfor>
	</target>
	
	<target name="newman">
		<echo message="Testing with Newman"/>
		<sleep milliseconds="5000" />
		<exec executable="newman" resultproperty="NEWMAN_EXITCODE">
			<arg value="run" />
			<arg value="./tests/newman/Bookstore Collection.postman_collection.json" />
			<arg value="-e" />
			<arg value="./tests/newman/Bookstore Test.postman_environment.json" />
			<arg value="--reporters" />
			<arg value="junit" />
		</exec>
	</target>
	
	<target name="undeploy-test-image">
		<echo message="Stopping Docker Container"/>	
		<stop-docker-container container-name="${CONTAINER_NAME}"/>

		<echo message="Removing Docker Container and Image"/>	
		<remove-docker-container container-name="${CONTAINER_NAME}"/>
		<remove-docker-image image-name="${IMAGE_NAME}"/>
	</target>
	
	<target name="assess-result">
		<echo message="Assessing testing result: ${NEWMAN_EXITCODE}" />
		<fail>
			<condition>
				<not>
					<equals arg1="${NEWMAN_EXITCODE}" arg2="0" />
				</not>
			</condition>
		</fail>
	</target>
</project>
	
